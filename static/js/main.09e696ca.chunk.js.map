{"version":3,"sources":["ducks/products.js","styled/styledComponents.js","products/product/product.js","products/search/search.js","products/products.js","CategoriesList/category/category.js","CategoriesList/categoriesList.js","App.js","index.js"],"names":["watchFetchProducts","fetchProductsAsync","initialState","isLoading","loadSuccess","errorOccurred","products","filteredProducts","searchedProducts","categories","search","currentCategory","requestProducts","data","type","payload","mapDispatchToProps","fetchProducts","getFilteredProducts","category","getSearchValue","searchValue","getSearchedProducts","getCurrentCategory","takeLatest","put","call","fetch","then","res","json","AppContainer","styled","div","displayName","AppDiv","AppMenu","menu","AppImg","img","ProductsDiv","displayname","ProductsUl","ul","dispayName","ProductName","span","ProductPrice","ProductLi","li","ProductImg","CategoryLi","Product","product","price","name","Container","style","margin","padding","Row","Col","xs","sm","md","lg","key","uuid","className","src","alt","propsTypes","PropTypes","string","withRouter","history","push","pathname","location","InputGroup","FormControl","onChange","e","target","value","Products","length","map","index","Category","slugCategory","slugify","toLowerCase","queryString","parse","to","activeStyle","color","backgroundColor","textDecoration","onClick","newSearch","App","this","props","prevProps","prevState","path","render","React","Component","connect","sagaMiddleware","createSagaMiddleware","store","createStore","state","action","forEach","item","bsr_category","indexOf","filter","composeWithDevTools","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.09e696ca.chunk.js","sourcesContent":["import {put, call, takeLatest} from 'redux-saga/effects';\nimport slugify from 'slugify'\n\n//Action types\n\nexport const REQUESTED_PRODUCTS = 'REQUESTED_PRODUCTS';\nexport const FETCHED_PRODUCTS = 'FETCHED_PRODUCTS';\nexport const LOADING_PRODUCTS = 'LOADING_PRODUCTS';\nexport const ERROR_OCCURRED = 'ERROR_OCCURRED';\nexport const GET_FILTERED_PRODUCTS = 'GET_FILTERED_PRODUCTS';\nexport const GET_CATEGORIES = 'GET_CATEGORIES';\nexport const GET_SEARCH_VALUE = 'GET_SEARCH_VALUE';\nexport const GET_SEARCHED_PRODUCTS = 'GET_SEARCHED_PRODUCTS';\nexport const GET_CURRENT_CATEGORY = 'GET_CURRENT_CATEGORY';\n\nexport const initialState = {\n    isLoading: false,\n    loadSuccess: false,\n    errorOccurred: false,\n    products: [],\n    filteredProducts: [],\n    searchedProducts: [],\n    categories: [],\n    search: '',\n    currentCategory: ''\n};\n\n//Action creators\n\nexport const requestProducts = (data) => {\n    return {type: REQUESTED_PRODUCTS, payload: data}\n};\nexport const fetchProducts = () => {\n    return {type: FETCHED_PRODUCTS}\n};\nexport const loadingProducts = () => {\n    return {type: LOADING_PRODUCTS}\n};\nexport const errorOccurred = () => {\n    return {type: ERROR_OCCURRED}\n};\nexport const getFilteredProducts = (category) => {\n    return {\n        type: GET_FILTERED_PRODUCTS,\n        payload: category\n    }\n};\nexport const getCategories = () => {\n    return {type: GET_CATEGORIES}\n};\nexport const getSearchValue = (searchValue) => {\n    return {\n        type: GET_SEARCH_VALUE,\n        payload: searchValue\n    }\n};\nexport const getSearchedProducts = () => {\n    return {type: GET_SEARCHED_PRODUCTS}\n};\nexport const getCurrentCategory = (category) => {\n    return {\n        type: GET_CURRENT_CATEGORY,\n        payload: category\n    }\n\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOADING_PRODUCTS:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case REQUESTED_PRODUCTS: {\n            return {\n                ...state,\n                products: action.payload.products,\n                loadSuccess: true,\n                isLoading: false\n            };\n        }\n        case ERROR_OCCURRED:\n            return {\n                ...state,\n                isLoading: false,\n                errorOccurred: true\n            };\n        case GET_CATEGORIES: {\n            let categories = ['All Products'];\n            [...state.products].forEach(item => {\n                const category = item.bsr_category;\n                if (categories.indexOf(category) === -1) {\n                    categories.push(category)\n                }\n            });\n            return {...state, categories};\n\n        }\n        case GET_FILTERED_PRODUCTS: {\n            const filteredProducts = [...state.products]\n                .filter(item => slugify(item.bsr_category\n                        .toLowerCase()) ===\n                            state.currentCategory || state.currentCategory === 'all-products');\n            return {\n                ...state,\n                filteredProducts\n            }\n        }\n        case GET_SEARCH_VALUE: {\n            return {...state, search: action.payload}\n        }\n        case GET_CURRENT_CATEGORY: {\n            const currentCategory = slugify(action.payload.toLowerCase());\n            return {...state, currentCategory}\n        }\n        case GET_SEARCHED_PRODUCTS: {\n            let searchedProducts = [];\n            if (state.currentCategory && state.currentCategory !== 'all-products') {\n                [...state.filteredProducts].forEach(product => {\n                    const name = product.name.toLowerCase();\n                    const search = state.search.toLowerCase();\n                    if (name.indexOf(search) >= 0) {\n                        searchedProducts.push(product)\n                    }\n                })\n            } else {\n                [...state.products].forEach(product => {\n                    const name = product.name.toLowerCase();\n                    const search = state.search.toLowerCase();\n                    if (name.indexOf(search) >= 0) {\n                        searchedProducts.push(product)\n                    }\n                })\n            }\n            return {\n                ...state,\n                searchedProducts\n            }\n        }\n        default:\n            return state;\n    }\n};\n\n//Connect dispatch and state\n\nexport const mapStateToProps = ({\n    products, isLoading, errorOccurred, filteredProducts, categories, search, currentCategory, searchedProducts\n}) => {\n    return {\n        products,\n        isLoading,\n        errorOccurred,\n        filteredProducts,\n        categories,\n        search,\n        currentCategory,\n        searchedProducts\n    }\n\n};\n\nexport const mapDispatchToProps = {\n    fetchProducts,\n    getFilteredProducts,\n    getSearchValue,\n    getSearchedProducts,\n    getCurrentCategory\n};\n\n// Sagas async\nexport function* watchFetchProducts() {\n    yield takeLatest(FETCHED_PRODUCTS, fetchProductsAsync);\n}\n\nexport function* fetchProductsAsync() {\n    try {\n        yield put(loadingProducts());\n        const data = yield call(() => fetch('../products.json').then(res => res.json()));\n        yield put(requestProducts(data));\n        yield put(getCategories())\n    } catch (error) {\n        yield put(errorOccurred())\n    }\n}","import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n  text-align: center;\n  margin: 0;\n  padding: 0;\n  background: rgba(0,130,117,1);\n  background: -moz-linear-gradient(top, rgba(0,130,117,1) 0%, rgba(0,94,120,1) 100%);\n  background: -webkit-gradient(left top, left bottom, color-stop(0%, rgba(0,130,117,1)), color-stop(100%, rgba(0,94,120,1)));\n  background: -webkit-linear-gradient(top, rgba(0,130,117,1) 0%, rgba(0,94,120,1) 100%);\n  background: -o-linear-gradient(top, rgba(0,130,117,1) 0%, rgba(0,94,120,1) 100%);\n  background: -ms-linear-gradient(top, rgba(0,130,117,1) 0%, rgba(0,94,120,1) 100%);\n  background: linear-gradient(to bottom, rgba(0,130,117,1) 0%, rgba(0,94,120,1) 100%);\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#008275', endColorstr='#005e78', GradientType=0 );\n  color: white;\n  min-height: 100vh;\n  overflow: hidden;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n`;\nAppContainer.displayName = 'AppContainer';\n\nexport const AppDiv = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  @media (max-width: 575px) {\n    flex-flow: column wrap;\n  }\n`;\nAppDiv.displayName = 'AppDiv';\n\nexport const AppMenu = styled.menu`\n  display: flex;\n  flex-flow: column nowrap;\n  text-align:left;\n  align-items: flex-start;\n  height: auto;\n  width: 20vw;\n  cursor: pointer;\n  padding: 0;\n  margin-bottom: 1vh;\n  height:15vh;\n`;\nAppMenu.displayName = 'AppMenu';\n\nexport const AppImg = styled.img`\nposition: absolute;\nborder-radius: 50%;\ntop: 40%;\nleft: 40%;\n`;\nAppImg.displayName = 'AppImg';\n\nexport const ProductsDiv = styled.div`\n    display: flex;\n    flex-flow: column nowrap;\n`;\nProductsDiv.displayname = 'ProductsDiv';\n\nexport const ProductsUl = styled.ul`\n    margin: 0;\n    padding: 0;\n`;\nProductsUl.dispayName = 'ProductsUl';\n\nexport const ProductName = styled.span`\n    font-size: 2.5vmin;\n    line-height: 70%;   \n    color: black;\n    @media (max-width: 575px) {\n    font-size: 2.5vmax;\n    padding: 10px;\n  }\n`;\nProductName.displayName = 'ProductName';\n\nexport const ProductPrice = styled.span`\n    font-size: 3vmin;\n    line-height: 70%;   \n    color: black;\n    font-weight: bold;\n    @media (max-width: 575px) {\n    font-size: 2.5vmax;\n    margin: 2vmax;\n  }\n`;\nProductPrice.displayName = 'ProductPrice';\n\nexport const ProductLi = styled.li`\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 1vmin;\n    background-color: rgba(255, 255, 255, 0.8);\n    border-radius: 2vmin;\n`;\nProductLi.displayName = 'ProductLi';\n\nexport const ProductImg = styled.img`\n    max-width: 40vmin;  \n    padding: 0;\n    border-radius: 1vmin;\n    @media (max-width: 575px) {\n        margin-bottom: 1vmax;\n        max-width: 50vmin;  \n    }\n`;\nProductImg.displayName = 'ProductImg';\n\nexport const CategoryLi = styled.li`\n  text-align: left;\n  border: 1px solid black;\n  text-align: center;\n  width: 20vw;\n  list-style-type: none;\n  background: #02a879;\n  font-size: 2.5vh;\n  @media (max-width: 575px) {\n    width: 100vw;\n    font-size: 2vh;\n    \n  }\n  &:hover { \n    background-color: rgba(0, 107, 54, 0.6);\n    text-decoration: none;\n    color: white;\n  };\n`;\nCategoryLi.displayName = 'CategoryLi';\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport PropTypes from 'prop-types'\nimport uuid from 'uuid'\n\nimport { ProductImg, ProductLi, ProductPrice, ProductName } from \"../../styled/styledComponents\";\n\nconst Product = ({ product: { img, price, name } }) => {\n\n    return <Container style={{margin: 0, padding: 0}}>\n        <Row >\n            <Col  xs sm md={12} lg>\n                <ProductLi key={uuid()} className='flex-column flex-sm-row flex-md-row'>\n                    <Col xs={12} sm={5} md={5} ><ProductImg src={img} alt=\"product\"/></Col>\n                    <Col xs={12}  sm={2} md={2}> <ProductPrice>{price} GBP</ProductPrice></Col>\n                    <Col  xs={12}  sm={5} md={5}> <ProductName>{name}</ProductName></Col>\n                </ProductLi>\n            </Col>\n        </Row>\n    </Container>\n};\nProduct.propsTypes = {\n    img: PropTypes.string,\n    price: PropTypes.string,\n    name: PropTypes.string,\n};\nexport default Product;","import React from 'react'\nimport {FormControl, InputGroup} from \"react-bootstrap\";\nimport {withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\n\nexport const Search = ({search, getSearchValue, getSearchedProducts, history:{push, location:{pathname}}}) => {\n    const inputHandler = (e) => {\n        getSearchValue(e.target.value);\n        getSearchedProducts();\n        if (e.target.value) {\n            push(`${pathname}?search=${e.target.value}`);\n        } else {\n            push(`${pathname}`)\n        }\n    };\n\n    return <InputGroup className=\"mb-12\"\n                       style={{\n                           margin: '2vmin 0',\n                           padding: 0\n                       }}>\n        <FormControl onChange={inputHandler} value={search}/>\n    </InputGroup>\n};\nSearch.propTypes = {\n    search: PropTypes.string,\n    pathname: PropTypes.string,\n    getSearchValue: PropTypes.func,\n    getSearchedProducts: PropTypes.func,\n    push: PropTypes.func\n};\nexport default withRouter(Search);\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Product from './product/product';\nimport Search from './search/search'\nimport {ProductsDiv, ProductsUl} from \"../styled/styledComponents\";\n\nexport const Products = ({\n  searchedProducts, getCurrentCategory, search, filteredProducts, getSearchedProducts,\n  getSearchValue, products, history: {location: {pathname}}\n}) => {\n    getCurrentCategory(pathname);\n    // TODO: move to a separate func\n    const showProductsList = () => {\n        if (search.length !== 0) {\n           return searchedProducts.map((product, index) => <Product key={index} product={product}/>);\n        } else if (filteredProducts.length > 0) {\n            return filteredProducts.map((product, index) => <Product key={index} product={product}/>);\n        } else {\n            return products.map((product, index) => <Product key={index} product={product}/>);\n        }\n    };\n\n    return (\n        <ProductsDiv className='col-md-9'>\n            <Search\n                getSearchValue={getSearchValue}\n                getSearchedProducts={getSearchedProducts}\n                search={search}\n            />\n            <ProductsUl className='col-md-12'>\n                {showProductsList()}\n            </ProductsUl>\n        </ProductsDiv>\n    )\n};\n\nProducts.propTypes = {\n    searchedProducts: PropTypes.array,\n    filteredProducts: PropTypes.array,\n    products: PropTypes.array,\n    getCurrentCategory: PropTypes.func,\n    getSearchedProducts: PropTypes.func,\n    getSearchValue: PropTypes.func,\n    search: PropTypes.string,\n    pathname: PropTypes.string\n};\nexport default Products;\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport uuid from 'uuid'\nimport queryString from 'query-string'\nimport PropTypes from 'prop-types'\nimport slugify from \"slugify\";\n\nimport {CategoryLi} from '../../styled/styledComponents'\n\n\nconst Category = ({category, getCurrentCategory, getFilteredProducts, getSearchedProducts, getSearchValue, search}) => {\n    const slugCategory = slugify(category.toLowerCase());\n    const getProducts = () => {\n        getCurrentCategory(slugCategory);\n        getFilteredProducts();\n        getSearchedProducts();\n    };\n    if (search !== '' && search.length >= 1) {\n        let newSearch = queryString.parse(search);\n        getSearchValue(newSearch.search);\n    }\n\n    return (\n        <NavLink\n            to={{\n                pathname: `/${slugCategory}`,\n                search: `${search}`,\n            }}\n            key={uuid()}\n            activeStyle={{\n                color: 'white',\n                backgroundColor: 'rgba(0, 107, 54, 0.6)'\n            }}\n            style={{\n                color: 'black',\n                textDecoration: 'none',\n                backgroundColor: 'rgba(86, 125, 130, 1)'\n            }}\n            onClick={getProducts}\n        >\n            <CategoryLi>\n                {category}\n            </CategoryLi>\n        </NavLink>)\n};\nCategory.propTypes = {\n    category: PropTypes.string,\n    getCurrentCategory: PropTypes.func,\n    getFilteredProducts: PropTypes.func,\n    getSearchedProducts: PropTypes.func,\n    getSearchValue: PropTypes.func,\n    search: PropTypes.string\n};\nexport default Category;","import React from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport uuid from 'uuid';\nimport Category from './category/category';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types'\n\n\nconst CategoriesList = ({categories, getSearchValue, getSearchedProducts, getFilteredProducts, getCurrentCategory, location: {search}}) => {\n    if (search.length > 0) {\n        let newSearch = queryString.parse(search);\n        getSearchValue(newSearch.search);\n    }\n    return <>\n        {categories.map((category, index) => <Category\n                index={index}\n                key={uuid()}\n                category={category}\n                getSearchValue={getSearchValue}\n                getCurrentCategory={getCurrentCategory}\n                getFilteredProducts={getFilteredProducts}\n                getSearchedProducts={getSearchedProducts}\n                search={search}\n            />\n        )}</>\n\n};\n\nCategoriesList.propTypes = {\n    categories: PropTypes.array,\n    getSearchValue: PropTypes.func,\n    getSearchedProducts: PropTypes.func,\n    getFilteredProducts: PropTypes.func,\n    getCurrentCategory: PropTypes.func,\n    search: PropTypes.string\n};\n\nexport default withRouter(CategoriesList);\n\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { mapStateToProps, mapDispatchToProps } from './ducks/products'\nimport { AppContainer, AppDiv, AppImg, AppMenu } from \"./styled/styledComponents\"\nimport Products from './products/products'\nimport CategoriesList from \"./CategoriesList/categoriesList\";\n\n\nexport class App extends React.Component {\n    componentDidMount() {\n        this.props.fetchProducts();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.currentCategory && prevProps.products.length !== this.props.products.length) {\n            this.props.getFilteredProducts();\n            this.props.getSearchedProducts();\n        }\n        if (this.props.search && prevProps.search.length !== this.props.search.length) {\n            this.props.getSearchedProducts();\n        }\n    }\n\n    render() {\n        return (\n            <AppContainer className=\"col-lg-12\">\n                <Router>\n                    <AppDiv>\n                        <AppMenu>\n                            <CategoriesList\n                                currentCategory={this.props.currentCategory}\n                                categories={this.props.categories}\n                                search={this.props.search}\n                                getSearchValue={this.props.getSearchValue}\n                                getCurrentCategory={this.props.getCurrentCategory}\n                                getFilteredProducts={this.props.getFilteredProducts}\n                                getSearchedProducts={this.props.getSearchedProducts}\n                            />\n                        </AppMenu>\n                        {this.props.isLoading ? (\n                            <AppImg\n                                src=\"https://i.pinimg.com/originals/3f/2c/97/3f2c979b214d06e9caab8ba8326864f3.gif\"\n                                alt=\"loader\"\n                            />\n                        ) : this.props.errorOccurred ? (\n                            <p>Error, try again</p>\n                        ) : (\n                            <Route path='/' render={props => (\n                                <Products\n                                    {...props}\n                                    getFilteredProducts={this.props.getFilteredProducts}\n                                    filteredProducts={this.props.filteredProducts}\n                                    searchedProducts={this.props.searchedProducts}\n                                    search={this.props.search}\n                                    products={this.props.products}\n                                    getSearchValue={this.props.getSearchValue}\n                                    getSearchedProducts={this.props.getSearchedProducts}\n                                    getCurrentCategory={this.props.getCurrentCategory}\n                                />\n                            )}/>\n                        )}\n                    </AppDiv>\n                </Router>\n            </AppContainer>\n        );\n    }\n\n}\n\nApp.propTypes = {\n    currentCategory: PropTypes.string,\n    category: PropTypes.string,\n    getFilteredProducts: PropTypes.func,\n    fetchProducts: PropTypes.func,\n    filteredProducts: PropTypes.array,\n    searchedProducts: PropTypes.array,\n    search: PropTypes.string,\n    products: PropTypes.array,\n    getSearchValue: PropTypes.func,\n    getSearchedProducts: PropTypes.func,\n    getCurrentCategory: PropTypes.func,\n    Products: PropTypes.element,\n    Category: PropTypes.element\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux'\nimport createSagaMiddleware from 'redux-saga';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport App from './App';\nimport {reducer, watchFetchProducts} from './ducks/products'\n\n// Action Creators\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(watchFetchProducts);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root'));\n"],"sourceRoot":""}